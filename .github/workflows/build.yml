name: Build PixelInvaders

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------------
      # Linux Dependencies
      # -------------------------------
      - name: Install Dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y cmake build-essential pkg-config \
            libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev zip patchelf

      # -------------------------------
      # macOS Dependencies
      # -------------------------------
      - name: Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake pkg-config sdl2 sdl2_image sdl2_ttf sdl2_mixer zip

          # Ensure pkg-config can find SDL2
          echo "PKG_CONFIG_PATH=/opt/homebrew/lib/pkgconfig" >> $GITHUB_ENV

      # -------------------------------
      # Windows Dependencies
      # -------------------------------
      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install 7zip -y

      - name: Set PKG_CONFIG_PATH (macOS)
        if: matrix.os == 'macos-latest'
        run: echo "PKG_CONFIG_PATH=/opt/homebrew/lib/pkgconfig" >> $GITHUB_ENV

      # -------------------------------
      # Configure & Build
      # -------------------------------
      - name: Configure and Build
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      # -------------------------------
      # Install to Dist Folder
      # -------------------------------
      - name: Install Game
        run: |
          cmake --install build --config Release --prefix dist

      # -------------------------------
      # Bundle SDL Libraries (macOS)
      # -------------------------------
      - name: Bundle SDL dylibs (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          APP=dist/PixelInvaders.app
          EXE="$APP/Contents/MacOS/PixelInvaders"
          FWK="$APP/Contents/Frameworks"

          mkdir -p "$FWK"

          # 1) Copy SDL dylibs from Homebrew into the bundle's Frameworks dir
          for lib in SDL2 SDL2_image SDL2_ttf SDL2_mixer; do
            src=$(ls /opt/homebrew/lib/lib${lib}-*.dylib | head -n1)
            cp "$src" "$FWK/"
          done

          # 2) Point each copied dylib's "install name" (its ID) to @rpath/...
          for dylib in "$FWK"/*.dylib; do
            base=$(basename "$dylib")
            install_name_tool -id "@rpath/$base" "$dylib"
          done

          # 3) Rewrite the app binary to look for SDL at @rpath/..., not /opt/homebrew/...
          #    (Check actual names with: otool -L "$EXE")
          for base in libSDL2-*.dylib libSDL2_image-*.dylib libSDL2_ttf-*.dylib libSDL2_mixer-*.dylib; do
            if otool -L "$EXE" | grep -q "/opt/homebrew/lib/$base"; then
              install_name_tool -change "/opt/homebrew/lib/$base" "@rpath/$base" "$EXE"
            fi
          done

          # 4) Add an rpath in the app binary to point at the Frameworks dir
          #    (Use ../Frameworks relative to the executable)
          install_name_tool -add_rpath "@executable_path/../Frameworks" "$EXE" || true

          # 5) Ad-hoc sign everything so Gatekeeper has fewer reasons to complain
          #    (Not notarized, but better than completely unsigned)
          codesign --force --deep --sign - "$FWK"/*.dylib
          codesign --force --deep --sign - "$APP"

      # -------------------------------
      # Bundle SDL Libraries (Linux)
      # -------------------------------
      - name: Bundle SDL so files (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist/libs
          for lib in libSDL2-2.0.so libSDL2_image-2.0.so libSDL2_ttf-2.0.so libSDL2_mixer-2.0.so; do
            cp $(ldconfig -p | grep $lib | head -n 1 | awk '{print $4}') dist/libs/
          done
          # Set rpath to look in ./libs
          patchelf --set-rpath '$ORIGIN/libs' dist/PixelInvaders

      # -------------------------------
      # Package Game
      # -------------------------------
      - name: Package Game (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd dist
          7z a ../PixelInvaders-${{ matrix.os }}.zip *
          cd ..

      - name: Package App (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          ditto -c -k --sequesterRsrc --keepParent dist/PixelInvaders.app PixelInvaders-macos.zip

      - name: Package Game (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist
          zip -r ../PixelInvaders-${{ matrix.os }}.zip .
          cd ..

      # -------------------------------
      # Upload Artifact
      # -------------------------------
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: PixelInvaders-${{ matrix.os }}
          path: PixelInvaders-${{ matrix.os }}.zip
